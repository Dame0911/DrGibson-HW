package hw3_code;

public class WareHouseTest {

		public static void main(String[] args) {
			testAddItem();
			testAddItem_Multiple();
			testGetItem_WithIndex();
//			testGetItem_WithName();
//			testGetAverageTemp();
//			testGetRefrigeratedItems();
//			testGetTotalCost();
//			testGetTotalCostRefrigerated();
//			testRemoveItem_WithIndex();
//			testRemoveItem_WithName();
//			testToString();
		}
		
		/**
		 * Add one item and check the number of items to verify.
		 */
		public static void testAddItem() {
			System.out.println("-->testAddItem"); 
			WareHouse w = new WareHouse();
			Item v = new Item("Granola Bar",2.0);
			w.addItem(v);
			System.out.println("Expected Output: Number of items: 1"); 
			System.out.println("Actual Output: Number of items: " + w.getNumItems());
			
		}
		
		/**
		 * Add three items and check the number of items to verify. At least one should be a refrigerated item.
		 */
		public static void testAddItem_Multiple() {
			System.out.println("-->testAddItem_Multiple");
			WareHouse w = new WareHouse();
			Item a = new Item("Granola Bar",2.0);
			Item b = new Item("Bread",4.3);
			Item c = new RefrigeratedItem("Waffles",5.4,20.00);
			w.addItem(a);
			w.addItem(b);
			w.addItem(c);
		   System.out.println("Expected Output, Number of Items: 3"); 
		   System.out.println("Actual Output, Number of Items: " + w.getNumItems()); 

		}
		
		/**b
		 * Add three items and retrieve the one at index 1.
		 */
		public static void testGetItem_WithIndex() {
			System.out.println("-->testGetItem_WithIndex"); 
			WareHouse w = new WareHouse();
			Item a = new Item("Granola Bar",2.0);
			Item b = new Item("Bread",4.3);
			Item c = new RefrigeratedItem("Waffles",5.4,20.00);
			w.addItem(a);
			w.addItem(b);
			w.addItem(c);
			
			System.out.println("Expected Output, Item at index 1: Bread"); 
			System.out.println("Actual Output, Item at index 1: " + w.getItem(1).getName());
		}

		/**
		 * Add three items and try to find one with a name that exists.
		 */
		public static void testGetItem_WithName() {
			System.out.println("-->testGetItem_WithName"); 
			WareHouse w = new WareHouse();
			Item a = new Item("Granola Bar",2.0);
			Item b = new Item("Bread",4.3);
			Item c = new RefrigeratedItem("Waffles",5.4,20.00);
			w.addItem(a);
			w.addItem(b);
			w.addItem(c);
			System.out.print("Expected Out[);
			System.out.println("NOT IMPLEMENTED"); 
		}

		/**
		 * Add 5 items, 3 of which are refrigerated. Verify the average temperature.
		 */
		public static void testGetAverageTemp() {
			System.out.println("-->testGetAverageTemp"); 
			
			
			
			System.out.println("NOT IMPLEMENTED"); 
		}
		
		/**
		 * Add 5 items, 3 of which are refrigerated. Verify that the 3 are returned in array.
		 */
		public static void testGetRefrigeratedItems() {
			System.out.println("-->testGetRefrigeratedItems"); 
			System.out.println("NOT IMPLEMENTED"); 
		}
		
		/**
		 * Add 5 items, 3 of which are refrigerated. Verify the total cost.
		 */
		public static void testGetTotalCost() {
			System.out.println("-->testGetTotalCostRefrigerated"); 
			System.out.println("NOT IMPLEMENTED"); 
		}

		/**
		 * Add 5 items, 3 of which are refrigerated. Verify the total cost of the 3 refrigerated items
		 */
		public static void testGetTotalCostRefrigerated() {
			System.out.println("-->testGetTotalCostRefrigerated"); 
			System.out.println("NOT IMPLEMENTED"); 
		}

		/**
		 * Add 5 items, 3 of which are refrigerated. Remove the one at position 2 and 
		 * verify: the item is returned, and the number of items is decremented.
		 */
		public static void testRemoveItem_WithIndex() {
			System.out.println("-->testRemoveItem_WithIndex"); 
			System.out.println("NOT IMPLEMENTED"); 
		}

		/**
		 * Add 5 items, 3 of which are refrigerated. Remove one with a name that exists and 
		 * verify: the item is returned, and the number of items is decremented.
		 */
		public static void testRemoveItem_WithName() {
			System.out.println("-->testRemoveItem_WithName"); 
			System.out.println("NOT IMPLEMENTED"); 
		}

		/**
		 * Verify that the toString method produces a string exactly
		 * as specified in the assignment document. 
		 */
		public static void testToString() {
			System.out.println("-->testToString"); 
			System.out.println("NOT IMPLEMENTED"); 
		}

	}

	
	
	


